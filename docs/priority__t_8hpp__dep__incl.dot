digraph "include/boost/fairness/priority_t.hpp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="include/boost/fairness\l/priority_t.hpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Alias the type Priority_t. Priority_t is the type of priorities that are used by the priority_mutexes..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="include/boost/fairness\l/detail/coherent_priority\l_lock.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$coherent__priority__lock_8hpp.html",tooltip="This file contains the implementation of a coherent priority lock."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="include/boost/fairness\l/detail/pqlock.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$pqlock_8hpp.html",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="include/boost/fairness\l/priority_mutex_cpl.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$priority__mutex__cpl_8hpp.html",tooltip=" "];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="include/boost/fairness\l/priority_mutex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$priority__mutex_8hpp.html",tooltip="This file contains the implementation of the priority_mutex."];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="include/boost/fairness\l/detail/pqspinlock.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$pqspinlock_8hpp.html",tooltip="This file contains the implementation of a priority qlock."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="benchmarks/pm/priority\l_mutex_benchmark.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$priority__mutex__benchmark_8hpp.html",tooltip="Alias priority_mutex_benchmark."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="benchmarks/pipeline\l_benchmark.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$pipeline__benchmark_8hpp.html",tooltip="Alias pipeline_benchmark."];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="benchmarks/benchmark.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$benchmark_8cpp.html",tooltip="Alias benchmark."];
  Node6 -> Node10 [id="edge9_Node000006_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="include/boost/fairness\l/spinlock_priority_mutex\l_cpl.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$spinlock__priority__mutex__cpl_8hpp.html",tooltip="This file contains the implementation of the spinlock_priority_mutex based on a scalable list base al..."];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="include/boost/fairness\l/spinlock_priority_mutex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$spinlock__priority__mutex_8hpp.html",tooltip="This file contains the implementation of the spinlock_priority_mutex based on a scalable list base al..."];
  Node11 -> Node4 [id="edge11_Node000011_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node12 [id="edge12_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="include/boost/fairness\l/priority_mutex_tatas.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$priority__mutex__tatas_8hpp.html",tooltip=" "];
  Node11 -> Node13 [id="edge13_Node000011_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="include/boost/fairness\l/recursive_priority_mutex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$recursive__priority__mutex_8hpp.html",tooltip="This file contains the implementation of the recursive_priority_mutex."];
  Node11 -> Node14 [id="edge14_Node000011_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="include/boost/fairness\l/shared_priority_mutex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$shared__priority__mutex_8hpp.html",tooltip="This file contains the implementation of the shared_priority_mutex."];
  Node1 -> Node15 [id="edge15_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="include/boost/fairness\l/detail/control_block_t.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$control__block__t_8hpp.html",tooltip="This file contains the definition of the control_block_t. TODO."];
  Node15 -> Node16 [id="edge16_Node000015_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="include/boost/fairness\l/slim_priority_mutex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$slim__priority__mutex_8hpp.html",tooltip="This file contains the implementation of the slim_priority_mutex."];
  Node1 -> Node3 [id="edge17_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge18_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge19_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge20_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge21_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge22_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="include/boost/fairness\l/shared_lock.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$shared__lock_8hpp.html",tooltip=" "];
  Node1 -> Node14 [id="edge23_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge24_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge25_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node18 [id="edge26_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="include/boost/fairness\l/spinlock_priority_mutex\l_tatas.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$spinlock__priority__mutex__tatas_8hpp.html",tooltip=" "];
  Node1 -> Node19 [id="edge27_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="include/boost/fairness\l/unique_lock.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$unique__lock_8hpp.html",tooltip="This file contains the implementation of the unique_lock."];
}
